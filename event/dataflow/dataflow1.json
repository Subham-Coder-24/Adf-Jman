{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_cleaned_ukproducts_table",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "aggregate1"
				},
				{
					"name": "select1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "sort1"
				},
				{
					"name": "cast1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Series_Code as string,",
				"          Series_Name as string,",
				"          Category_Code as string,",
				"          Category_Name_lv_1 as string,",
				"          Category_Name_lv_2 as string,",
				"          Category_Name_lv_3 as string,",
				"          Brand_Name as string,",
				"          minDaysToShip as integer,",
				"          maxDaysToShip as integer,",
				"          MinPrice as double,",
				"          MaxPrice as double,",
				"          AvgPrice as double,",
				"          AvgDayToShip as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 aggregate(groupBy(Category_Name_lv_3),",
				"     AvgPriceOfCategory = sum(AvgPrice)/count(Category_Name_lv_3)) ~> aggregate1",
				"cast1 select(mapColumn(",
				"          Category = Category_Name_lv_3,",
				"          AvgPriceOfCategory",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 filter(AvgPriceOfCategory != 0",
				") ~> filter1",
				"filter1 sort(desc(AvgPriceOfCategory, true)) ~> sort1",
				"aggregate1 cast(output(",
				"          AvgPriceOfCategory as integer",
				"     ),",
				"     errors: true) ~> cast1"
			]
		}
	}
}