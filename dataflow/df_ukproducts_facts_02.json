{
	"name": "df_ukproducts_facts_02",
	"properties": {
		"folder": {
			"name": "ukproducts"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_cleaned_ukproducts_table",
						"type": "DatasetReference"
					},
					"name": "Brand"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_ukproducts_fact_brand_table_sink",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "CountProductEachBrand"
				},
				{
					"name": "MaxProductCount"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Series_Code as string,",
				"          Series_Name as string,",
				"          Category_Code as string,",
				"          Category_Name_lv_1 as string,",
				"          Category_Name_lv_2 as string,",
				"          Category_Name_lv_3 as string,",
				"          Brand_Name as string,",
				"          minDaysToShip as integer,",
				"          maxDaysToShip as integer,",
				"          MinPrice as double,",
				"          MaxPrice as double,",
				"          AvgPrice as double,",
				"          AvgDayToShip as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Brand",
				"Brand aggregate(groupBy(Brand_Name),",
				"     count_products = count(Series_Code)) ~> CountProductEachBrand",
				"CountProductEachBrand sort(desc(count_products, true)) ~> MaxProductCount",
				"MaxProductCount sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}